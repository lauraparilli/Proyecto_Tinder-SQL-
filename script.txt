SET search_path TO tinder_viejos_egresados,Â public;
SET DATASTYLE TO 'European';

CREATE TABLE IF NOT EXISTS cuenta(
	id_cuenta INT GENERATED ALWAYS AS IDENTITY,
	nombre VARCHAR(16) NOT NULL,
	apellido VARCHAR(16) NOT NULL,
	fecha_nacimiento DATE NOT NULL,
	fecha_creacion DATE NOT NULL DEFAULT CURRENT_DATE,
	email VARCHAR(255) UNIQUE,
	contrasena VARCHAR(128) NOT NULL,
	telefono VARCHAR(13),
	idioma VARCHAR(3) DEFAULT 'ESP' NOT NULL,
	notificaciones BOOLEAN DEFAULT TRUE NOT NULL, 
	tema BOOLEAN DEFAULT TRUE NOT NULL,
	PRIMARY KEY (id_cuenta)
);
CREATE TABLE IF NOT EXISTS pago(
	id_pago INT GENERATED ALWAYS AS IDENTITY,
	numero_factura INT NOT NULL,
	aprobado BOOLEAN NOT NULL,
	metodo VARCHAR(7) NOT NULL,
	monto INT DEFAULT 0 NOT NULL,
	fecha DATE NOT NULL DEFAULT CURRENT_DATE, 
	documento_factura BYTEA NOT NULL,
 PRIMARY KEY (id_pago)
	
);

CREATE TABLE IF NOT EXISTS preferencias (
	id_cuenta INT, 
	id_perfil INT, 
	estudio VARCHAR(16),
	coordanada_origen VARCHAR(30) NOT NULL,
	distancia_maxima INT DEFAULT 0 CHECK (distancia_maxima <= 3000) NOT NULL,
	min_edad INT DEFAULT 30 CHECK (min_edad >= 30 AND min_edad <= 99) NOT NULL,
	max_edad INT DEFAULT 99 CHECK (max_edad >=30 AND max_edad <= 99) NOT NULL,
	PRIMARY KEY (id_cuenta, id_perfil), 
	CONSTRAINT fk_id_cuenta_id_perfil_preferencias
		FOREIGN KEY (id_cuenta, id_perfil) REFERENCES perfil(id_cuenta, id_perfil)
			ON DELETE CASCADE ON UPDATE CASCADE, 
	CONSTRAINT check_edad CHECK (min_edad <= max_edad)
);




CREATE TABLE IF NOT EXISTS esta_en_agrupacion (
	id_cuenta INT,
	id_perfil INT,
	dominio VARCHAR(64),
	agrupacion VARCHAR(64),
	PRIMARY KEY(id_cuenta, id_perfil, dominio, agrupacion),
	CONSTRAINT fk_id_cuenta_id_perfil_esta_en_agrupacion
		FOREIGN KEY(id_cuenta, id_perfil) REFERENCES perfil(id_cuenta, id_perfil)
			ON DELETE CASCADE 	ON UPDATE CASCADE,
	CONSTRAINT fk_domino_institucion
		FOREIGN KEY (dominio) REFERENCES institucion
			ON DELETE CASCADE 	ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS archivo (
	id_chat INT,
	numero_msj INT,
	nombre VARCHAR(128) NOT NULL,
	tipo VARCHAR(16) NOT NULL,
	contenido BYTEA NOT NULL,
	PRIMARY KEY(id_chat, numero_msj, nombre,tipo, contenido),
	CONSTRAINT fk_id_chat_numero_msj_archivo
		FOREIGN KEY(id_chat, numero_msj) REFERENCES mensaje(id_chat, numero_msj)
			ON DELETE CASCADE 	ON UPDATE CASCADE
);
