CREATE TABLE IF NOT EXISTS swipes (
    id_disliker INT,
    id_disliked INT,
    PRIMARY KEY (id_disliker, id_disliked),
    CONSTRAINT fk_id_disliker_swipes
    FOREIGN KEY (id_disliker) REFERENCES cuenta(id_cuenta),
    CONSTRAINT fk_id_disliked_swipes
    FOREIGN KEY (id_disliked) REFERENCES cuenta(id_cuenta)
);

CREATE TABLE IF NOT EXISTS trabaja_en (
    id_cuenta INT,
    id_perfil INT,
    idempresa INT,
    cargo VARCHAR(24) NOT NULL,
    fecha_inicio DATE NOT NULL,
    PRIMARY KEY(id_cuenta, id_perfil, idempresa),
    CONSTRAINT fk_id_cuenta_id_perfil_trabaja_en
        FOREIGN KEY(id_cuenta, id_perfil) REFERENCES perfil(id_cuenta, id_perfil)
        ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT fk_idempresa_trabaja_en
        FOREIGN KEY(idempresa) REFERENCES empresa(idempresa)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS tarjeta (
    digitos_tarjeta VARCHAR(19) CHECK (numero_tarjeta ~ '^[0-9]{16,19}$'),
	nombre_titular VARCHAR(32) NOT NULL,
	fecha_caducidad DATE NOT NULL,
	codigo_cv VARCHAR(4) CHECK (codigo_cv ~ '^[0-9]{3,4}$'),
	tipo VARCHAR(16) NOT NULL,
	PRIMARY KEY(digitos_tarjeta)
);

CREATE TABLE IF NOT EXISTS institucion (
    dominio VARCHAR(64),
    nombre VARCHAR(32) NOT NULL,
    coordenada VARCHAR(30) NOT NULL,
    tipo tipo_instituciones NOT NULL,
    ano_fundacion INT NOT NULL,
	PRIMARY KEY(dominio)
);

CREATE TABLE IF NOT EXISTS mensaje (
    id_chat INT,
    numero_msj INT GENERATED ALWAYS AS IDENTITY,
    id_remitente INT NOT NULL,
    id_destinatario INT NOT NULL,
    visto BOOLEAN DEFAULT FALSE,
    texto BYTEA NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id_chat, numero_msj),
    CONSTRAINT fk_id_chat_mensaje
        FOREIGN KEY(id_chat) REFERENCES chat(id_chat)
);

CREATE TABLE IF NOT EXISTS tiene_hobby (
    id_cuenta INT,
    id_perfil INT,
    hobby VARCHAR(64),
    PRIMARY KEY(id_cuenta, id_perfil, hobby),
    CONSTRAINT fk_id_cuenta_id_perfil_tiene_hobby
        FOREIGN KEY(id_cuenta, id_perfil) REFERENCES perfil(id_cuenta, id_perfil)
        ON UPDATE CASCADE ON DELETE CASCADE
);
